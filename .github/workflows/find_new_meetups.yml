# .github/workflows/find_new_meetups.yml

name: Find new meetups with Robot Framework

on:
  # Runs the workflow on every push to main branch
  push:
    branches:
      - main
  # Allows manual triggering of the workflow
  workflow_dispatch:
  # Schedule to run every Friday at 08 AM UTC (10 AM Finnish time) 
  schedule:
    - cron: '0 8 * * 5'

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Step 2: Set dynamic cache key
    - name: Set Cache Key
      id: cache-key
      run: |
        echo "key=cache-announcements-$(date +'%Y-%U')" >> $GITHUB_ENV
        echo "restore_key=cache-announcements-$(date -d 'last week' +'%Y-%U')" >> $GITHUB_ENV

    - name: Restore cached meetups
      id: cache-meetups
      uses: actions/cache/restore@v4
      with:
        path: tests/testdata/meetups.json
        key: ${{ env.restore_key }}

    - name: Check if cache was restored
      run: |
        if [ ${{steps.cache-meetups.outputs.cache-hit}} == 'true' ]; then
          echo "Cache was restored from previous run!"
        else
          echo "No cache found, running full setup."
        fi

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Create and activate virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
        rfbrowser init
        
    - name: Run Robot Framework tests
      env:
          PYTHONPATH: ${{ github.workspace }}/src
          SLACK_URL: ${{ secrets.SLACK_URL }}
      run: | 
          source venv/bin/activate
          robot --outputdir results --exclude skip tests/meetups_bot.robot
    
    - name: Save meetups
      uses: actions/cache/save@v4
      with:
        path: tests/testdata/meetups.json
        key: ${{ env.key }}
  

    - name: Archive Robot Framework results
      uses: actions/upload-artifact@v4
      with:
          name: robot-results
          path: results/
